<!-- MainWindow.xaml -->
<Window x:Class="WPF_WMS01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_WMS01"
        xmlns:vm="clr-namespace:WPF_WMS01.ViewModels"
        xmlns:cnv="clr-namespace:WPF_WMS01.Converters"
        xmlns:popups="clr-namespace:WPF_WMS01.Views.Popups"
        mc:Ignorable="d"
        Title="랙 관리 시스템" Height="1040" Width="1922" Left="0" Top="0">
    <!-- Height="768" Width="1024" WindowState="Maximized" -->

    <Window.Resources>
        <!-- App.xaml에 이미 선언된 컨버터는 여기서 중복 선언하지 않습니다. -->
        <!-- <cnv:BackgroundColorConverter x:Key="BackgroundColorConverter" /> -->
        <!-- <cnv:ImageIndexToImagePathConverter x:Key="ImageIndexToImagePathConverter"/> -->
        <!-- <cnv:BooleanToVisibilityConverterForHidden x:Key="BooleanToVisibilityConverterForHidden"/> -->
        <!-- <cnv:LoginStatusToColorConverter x:Key="LoginStatusToColorConverter"/> -->
        <!-- <cnv:ProgressToWidthConverter x:Key="ProgressToWidthConverter"/> -->
        
        <Style x:Key="NoChromeButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.9"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.03" ScaleY="1.03"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 새로운 현대적인 버튼 스타일 (입고/출고 버튼용) -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#4CAF50" Offset="0.0"/>
                        <GradientStop Color="#388E3C" Offset="1.0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#2E7D32"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#66BB6A" Offset="0.0"/>
                                            <GradientStop Color="#43A047" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="2" Direction="270" Color="Black" Opacity="0.3" BlurRadius="5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#388E3C" Offset="0.0"/>
                                            <GradientStop Color="#2E7D32" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="1" Direction="270" Color="Black" Opacity="0.5" BlurRadius="2"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#AAAAAA" Offset="0.0"/>
                                            <GradientStop Color="#777777" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style>

        <!-- 콜 버튼 스타일 정의: 활성화/비활성화 및 진행 중 상태 표현 포함 -->
        <Style x:Key="CallButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="135"/>
            <Setter Property="Height" Value="64"/>
            <Setter Property="Margin" Value="0,5,20,5"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#FF2196F3"/>
            <!-- 기본 활성화 상태 배경색 (파란색) -->
            <Setter Property="Foreground" Value="White"/>
            <!-- 기본 활성화 상태 전경색 (흰색) -->
            <Setter Property="BorderBrush" Value="#FF1976D2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <!-- 클릭 가능함을 나타내는 커서 -->
            <Style.Triggers>
                <!-- 마우스 오버 시 시각적 변화 -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1976D2"/>
                </Trigger>
                <!-- 버튼 눌림 시 시각적 변화 -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF0D47A1"/>
                </Trigger>
                <!-- IsProcessing이 True일 때의 시각적 상태 (작업 진행 중) -->
                <DataTrigger Binding="{Binding IsProcessing}" Value="True">
                    <Setter Property="Background" Value="#FFD700"/>
                    <!-- 황금색 (진행 중) -->
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Cursor" Value="Wait"/>
                    <!-- 대기 커서 -->
                </DataTrigger>
                <!-- IsEnabled가 false일 때의 시각적 상태 정의 -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFB0BEC5"/>
                    <!-- 비활성화 상태 배경색 (회색) -->
                    <Setter Property="Foreground" Value="#FF607D8B"/>
                    <!-- 비활성화 상태 전경색 (어두운 회색) -->
                    <!-- Opacity는 제거하여 WPF 기본 비활성화 효과를 따르도록 함 -->
                    <Setter Property="Cursor" Value="Arrow"/>
                    <!-- 비활성화 커서 -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 햄버거 버튼 스타일 -->
        <Style x:Key="HamburgerButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Path Fill="{TemplateBinding Foreground}" Data="M0,8 L24,8 M0,16 L24,16 M0,24 L24,24"
                                      Stretch="Uniform" Width="24" Height="24" Stroke="{TemplateBinding Foreground}" StrokeThickness="2"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <!-- 메뉴 아이템 버튼 스타일 -->
        <Style x:Key="MenuItemButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#607D8B"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#37474F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DropShadowEffect x:Key="DefaultShadow" ShadowDepth="2" Direction="270" Color="Black" Opacity="0.3" BlurRadius="5"/>

        <!-- 원형 로그인 상태 버튼 스타일 -->
        <Style x:Key="LoginStatusButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                CornerRadius="25"
                                BorderThickness="2"
                                BorderBrush="Gray"
                                Background="Gray"
                                Padding="5">
                            <Grid>
                                <!-- 아이콘 또는 텍스트로 상태 표시 (예: 체크, X, 점 3개) -->
                                <TextBlock x:Name="StatusIcon" Text="?" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Foreground="White" FontWeight="Bold" FontSize="20"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- 상태: 로그인 시도 중 (노란색) - 가장 우선 순위 -->
                            <DataTrigger Binding="{Binding IsLoginAttempting}" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="Yellow"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Orange"/>
                                <Setter TargetName="StatusIcon" Property="Text" Value="..."/>
                                <Setter TargetName="StatusIcon" Property="Foreground" Value="Black"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <!-- 로그인 시도 중에는 클릭 불가능 -->
                            </DataTrigger>

                            <!-- 상태: 로그인 성공 (초록색) - 로그인 시도 중이 아닐 때 -->
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="Green"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="DarkGreen"/>
                                <Setter TargetName="StatusIcon" Property="Text" Value="✓"/>
                                <Setter TargetName="StatusIcon" Property="Foreground" Value="White"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <!-- 로그인 성공 시에도 클릭 가능하도록 -->
                            </DataTrigger>

                            <!-- 상태: 로그인 실패/로그인 안 됨 (빨간색) - 로그인 시도 중이 아니고 로그인되지 않았을 때 -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsLoggedIn}" Value="False"/>
                                    <Condition Binding="{Binding IsLoginAttempting}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="Red"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="DarkRed"/>
                                <Setter TargetName="StatusIcon" Property="Text" Value="✗"/>
                                <Setter TargetName="StatusIcon" Property="Foreground" Value="White"/>
                                <Setter Property="IsEnabled" Value="True"/>
                                <!-- 빨간색일 때만 클릭 가능 -->
                            </MultiDataTrigger>

                            <!-- 기본 비활성화 상태 (트리거에 의해 재정의되지 않은 경우) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- 기본적으로 버튼은 비활성화 상태로 시작하며, 위의 트리거에 의해 활성화됩니다. -->
            <Setter Property="IsEnabled" Value="False"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="#34495e" Padding="10">
            <Grid>
                <Button 
                        Style="{StaticResource HamburgerButtonStyle}"
                        HorizontalAlignment="Left" VerticalAlignment="Center"
                        Margin="10,0,0,0"
                        Command="{Binding OpenMenuCommand}"
                        x:Name="HamburgerButton"/>

                <TextBlock
                    Text="풍산 스포츠 탄 랙 관리 시스템"
                    FontSize="28" FontWeight="Bold" Foreground="White"
                    HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <StackPanel 
                    Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <TextBlock Text="{Binding LoginStatusMessage}"
                               Foreground="{Binding IsLoggedIn, Converter={StaticResource LoginStatusToColorConverter}}"
                               Margin="0,0,10,0" VerticalAlignment="Center" FontWeight="Bold" FontSize="18"/>

                    <Button Command="{Binding LoginCommand}"
                            Style="{StaticResource LoginStatusButtonStyle}"/>
                </StackPanel>

                <!-- 햄버거 버튼 클릭 시 나타날 팝업 메뉴 -->
                <Popup x:Name="MenuPopup"
                       IsOpen="{Binding IsMenuOpen, Mode=TwoWay}"
                       PlacementTarget="{Binding ElementName=HamburgerButton}"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       StaysOpen="False"
                       Width="250"
                       PopupAnimation="Slide">
                    <Border Background="#455A64" CornerRadius="5" BorderThickness="1" BorderBrush="#263238" Padding="5"
                            Effect="{StaticResource DefaultShadow}">
                        <StackPanel>
                            <Button Content="잠긴 랙 잠금 풀기" Style="{StaticResource MenuItemButtonStyle}" Command="{Binding MenuItem1Command}"/>
                            <Button Content="DB 수정 : AMR  -> Rack" Style="{StaticResource MenuItemButtonStyle}" Command="{Binding MenuItem2Command}"/>
                            <Button Content="옵션 3" Style="{StaticResource MenuItemButtonStyle}" Command="{Binding MenuItem3Command}"/>
                            <!-- 팝업이 닫힐 때 IsMenuOpen을 False로 설정하는 버튼 추가 -->
                            <Button Content="메뉴 닫기" Style="{StaticResource MenuItemButtonStyle}" Command="{Binding CloseMenuCommand}" Margin="0,10,0,0"/>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <Grid Grid.Row="1" Margin="40,10,20,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TabControl Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        Margin="0,0,0,0" BorderThickness="0">

                <TabItem Header="입고 관리" Width ="150" FontSize="20" FontWeight="Bold">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                             Margin="5,10,0,0"
                             Text="Lot 번호:"
                             FontSize="18" Foreground="Black" FontWeight="Light"
                             VerticalAlignment="Top"/>
                        <TextBox  Grid.Column="0"                     
                             Text="{Binding InputStringForButton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             MaxLength="15" Width="300" Height="80" Background="LightSeaGreen"
                             VerticalAlignment="Center" HorizontalAlignment="Left"
                             Margin="0,0,20,0"
                             BorderThickness="3" 
                             BorderBrush="Black"
                             FontSize="28" Foreground="White"
                             VerticalContentAlignment="Center"
                             TextAlignment="Center" />
                        <TextBlock Grid.Column="1"
                             Margin="5,10,0,0"
                             Text="Box 수:"
                             FontSize="18" Foreground="Black" FontWeight="Light"
                             VerticalAlignment="Top"/>
                        <TextBox  Grid.Column="1"  
                             Name="ProductBoxCount"
                             Text="{Binding InputStringForBoxes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewTextInput="ProductBoxCount_PreviewTextInput"
                             GotFocus="ProductBoxCount_GotFocus"
                             LostFocus="ProductBoxCount_LostFocus"
                             MaxLength="2" Width="80" Height="80" Background="LightSeaGreen"
                             VerticalAlignment="Center" HorizontalAlignment="Left"
                             Margin="0,0,20,0"
                             BorderThickness="3" 
                             BorderBrush="Black"
                             FontSize="28" Foreground="White"
                             VerticalContentAlignment="Center"
                             TextAlignment="Center" />
                        <Button Grid.Column="2" Content="미포장 입고"
                             Command="{Binding InboundProductCommand}"
                             Width="120" Height="64" FontSize="20" FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,20,0"
                             Style="{StaticResource ModernButtonStyle}"/>

                        <Button Grid.Column="3" Content="재공품 입고"
                             Command="{Binding FakeInboundProductCommand}"
                             Width="120" Height="64" FontSize="20" FontWeight="Bold"
                             VerticalAlignment="Center" HorizontalAlignment="Left"
                             Style="{StaticResource ModernButtonStyle}"/>
                    </Grid>
                </TabItem>
            </TabControl>
    
            <Separator Grid.Column="1">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </Separator.LayoutTransform>
            </Separator>

            <TabControl Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                        Margin="0,0,0,0" BorderThickness="0">

                <TabItem Header="포장실 상황" Width ="150" FontSize="20" FontWeight="Bold">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Modbus 콜버튼 12개 상태 표시 (버튼 레이아웃에 맞춰 ItemsControl로 변경) -->
                        <ItemsControl Grid.Column="1" Grid.ColumnSpan="6" ItemsSource="{Binding ModbusButtons}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="6"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Content}"
                                            Command="{Binding ExecuteButtonCommand}"
                                            CommandParameter="{Binding}"
                                            IsEnabled="{Binding IsEnabled}"
                                            Width="135" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,5" Style="{StaticResource ModernButtonStyle}">
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </TabItem>
                <TabItem Header="출고 관리" Width ="150" FontSize="20" FontWeight="Bold">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                         <TextBlock Grid.Column="0" Margin="5,10,0,0"
                                 Text="Lot 일련번호:"
                                 FontWeight="Light"
                                 FontSize="18" Foreground="Black"
                                 VerticalAlignment="Top"/>
                        <TextBox Grid.Column="0" Grid.Row="0"
                                 Name="ProductCodeTextBox"
                                 Text="{Binding InputStringForShipOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PreviewTextInput="ProductCodeTextBox_PreviewTextInput"
                                 GotFocus="ProductCodeTextBox_GotFocus"
                                 LostFocus="ProductCodeTextBox_LostFocus"
                                 MaxLength="4" Width="200" Height="80" Background="LightSeaGreen"
                                 VerticalAlignment="Center" HorizontalAlignment="Left"
                                 Margin="0,0,20,0"
                                 BorderThickness="3" 
                                 BorderBrush="Black"
                                 FontSize="28" Foreground="White"
                                 VerticalContentAlignment="Center"
                                 TextAlignment="Center" />

                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="223A"
                                    Command="{Binding Checkout223aProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="223SP"
                                    Command="{Binding Checkout223spProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="223XM"
                                    Command="{Binding Checkout223xmProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="5.56X"
                                    Command="{Binding Checkout556xProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                        <Grid Grid.Column="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="5.56K"
                                    Command="{Binding Checkout556kProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="M855T"
                                    Command="{Binding CheckoutM855tProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                        <Grid Grid.Column="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="M193"
                                    Command="{Binding CheckoutM193ProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="308B"
                                    Command="{Binding Checkout308bProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                        <Grid Grid.Column="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="308SP"
                                    Command="{Binding Checkout308spProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="308XM"
                                    Command="{Binding Checkout308xmProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                        <Grid Grid.Column="6">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="AUTO"/>
                                <RowDefinition Height="AUTO"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Content="7.62X"
                                    Command="{Binding Checkout762xProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,5,20,15" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Row="1" Content="M80"
                                    Command="{Binding CheckoutM80ProductCommand}"
                                    Width="100" Height="64" FontSize="20" FontWeight="Bold"
                                    VerticalAlignment="Center" HorizontalAlignment="Right"
                                    Margin="0,0,20,0" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <Image Grid.Row="2" Margin="20,20,20,10" Source="images/mybackground.png"
           HorizontalAlignment="Center" VerticalAlignment="Center"
           Panel.ZIndex="0"/>
        
        <ScrollViewer Grid.Row="2"  Margin="20,20,20,10" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <!-- ItemsControl 자체에는 고정된 Width/Height를 주지 않습니다.
                 부모 Grid.Row="2"와 UniformGrid가 크기를 조절하도록 둡니다. -->
            <ItemsControl ItemsSource="{Binding RackList}" Background="Transparent" Padding="20">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="22" Rows="6" VirtualizingPanel.IsVirtualizing="False"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:RackViewModel}">
                        <Button Command="{Binding RackClickCommand}"
                                CommandParameter="{Binding}"
                                Style="{StaticResource NoChromeButton}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <Border Width="73" Height="93" BorderBrush="DarkGray" BorderThickness="1" Margin="5"
                                    Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverterForHidden}}">
                                <StackPanel Orientation="Vertical"
                                            Background="{Binding IsLocked, Converter={StaticResource BackgroundColorConverter}}">
                                    <Image Width="64" Height="64"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Source="{Binding ImageIndex, Converter={StaticResource ImageIndexToImagePathConverter}}" />
                                    <TextBlock Text="{Binding Title}" FontWeight="Bold" HorizontalAlignment="Center"
                                               Foreground="White" FontFamily="Times New Roman" Margin="0,4,0,0" FontSize="20"/>
                                </StackPanel>
                            </Border>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- AutoClosingMessagePopupView를 표시할 컨테이너 (Grid.Row="2"의 중앙에 오버레이) -->
        <Border Grid.Row="2" Margin="0,0,250,0" HorizontalAlignment="Right" VerticalAlignment="Center" Panel.ZIndex="999"
                Visibility="{Binding IsMessagePopupVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <popups:AutoClosingMessagePopupView DataContext="{Binding CurrentMessagePopupViewModel}" />
        </Border>
        
        <Grid Grid.Row="3" Margin="40,0,40,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Source="images/poongsan.png" Height="32" Margin="10"/>
            <TextBlock Grid.Column="1" Text="(주)풍산 부산 사업소"
                       FontSize="20" FontWeight="Bold"
                       VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <Image Grid.Column="3" Source="images/arobotics.png" Height="32" Margin="10"/>
            <TextBlock Grid.Column="4" Text="A-ROBOTICS"
                       FontSize="20" FontWeight="Bold"
                       VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5, 0, 20, 0"/>
        </Grid>
    </Grid>
</Window>
